/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIPackage;

import LogicPackage.Ingrediente;
import LogicPackage.Modelo;
import LogicPackage.Receita;
import LogicPackage.TipoAlimentos.Carne;
import LogicPackage.TipoAlimentos.Cereal;
import LogicPackage.TipoAlimentos.Fruta;
import LogicPackage.TipoAlimentos.Lacticinios;
import LogicPackage.TipoAlimentos.Leguminosas;
import LogicPackage.TipoAlimentos.Oleos;
import LogicPackage.TipoAlimentos.Peixe;
import LogicPackage.TipoAlimentos.Vegetal;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class EditarReceita extends javax.swing.JFrame {

    Modelo l;
    Receita r;
    int id;
    DefaultListModel<String> model;
    ArrayList<Ingrediente> ing = null;
    JFrame pr;
    final JFileChooser fc = new JFileChooser();
    String camImg;

    /**
     * Creates new form EditarReceita
     */
    public EditarReceita(Modelo l, Receita r, int id, JFrame pr) {
        initComponents();
        this.l = l;
        this.r = r;
        this.id = id;
        this.pr = pr;
        model = new DefaultListModel<>();
        ing = r.getIngredientes();
        //initComponents();
        preenche();
    }

    public EditarReceita() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bUpload = new javax.swing.JButton();
        lTituloR = new javax.swing.JLabel();
        bAcrescentarIngrediente = new javax.swing.JButton();
        lTituloReceita = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        testAreaMetodoDePreparacao = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        listIngSelec = new javax.swing.JList<>();
        lnºpessoas = new javax.swing.JLabel();
        lingredientesselecionados = new javax.swing.JLabel();
        bGuardarReceita = new javax.swing.JButton();
        lupoadImagem = new javax.swing.JLabel();
        bEliminaReceita = new javax.swing.JButton();
        lTipoIngrediente = new javax.swing.JLabel();
        bVoltaA = new javax.swing.JButton();
        lingredientesDisponiveis = new javax.swing.JLabel();
        textFieldTituloReceita = new javax.swing.JTextField();
        lmetododepreparacao = new javax.swing.JLabel();
        textFieldNPessoas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listIngDisp = new javax.swing.JList<>();
        boxTipoIngrediente = new javax.swing.JComboBox<>();
        bEliminarR = new javax.swing.JButton();
        txtGramas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bUpload.setText("Upload");
        bUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUploadActionPerformed(evt);
            }
        });

        lTituloR.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lTituloR.setText("Editar Receita");

        bAcrescentarIngrediente.setText("Acrescentar ");
        bAcrescentarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAcrescentarIngredienteActionPerformed(evt);
            }
        });

        lTituloReceita.setText("Titulo da Receita:");

        testAreaMetodoDePreparacao.setColumns(20);
        testAreaMetodoDePreparacao.setLineWrap(true);
        testAreaMetodoDePreparacao.setRows(5);
        jScrollPane2.setViewportView(testAreaMetodoDePreparacao);

        listIngSelec.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listIngSelec);

        lnºpessoas.setText("Nº Pessoas:");

        lingredientesselecionados.setText("Ingredientes Selecionados:");

        bGuardarReceita.setText("Guardar Receita");
        bGuardarReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarReceitaActionPerformed(evt);
            }
        });

        lupoadImagem.setText("Upload de Imagem");

        bEliminaReceita.setText("Eliminar Receita");
        bEliminaReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminaReceitaActionPerformed(evt);
            }
        });

        lTipoIngrediente.setText("Tipo Ingrediente:");

        bVoltaA.setText("Voltar atrás");
        bVoltaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVoltaAActionPerformed(evt);
            }
        });

        lingredientesDisponiveis.setText("Ingredientes Disponiveis:");

        lmetododepreparacao.setText("Método de Preparação:");

        jScrollPane1.setViewportView(listIngDisp);

        boxTipoIngrediente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carne", "Peixe", "Vegetal", "Fruta", "Cereal", "Lacticinios", "Leguminosas", "Oleos" }));
        boxTipoIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxTipoIngredienteActionPerformed(evt);
            }
        });

        bEliminarR.setText("Eliminar Ingrediente");
        bEliminarR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarRActionPerformed(evt);
            }
        });

        txtGramas.setToolTipText("");

        jLabel1.setText("Gramas:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bGuardarReceita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bEliminaReceita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bVoltaA)
                        .addGap(109, 109, 109))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(bEliminarR)
                                    .addGap(409, 409, 409)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtGramas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bAcrescentarIngrediente))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lingredientesselecionados)
                                        .addComponent(lmetododepreparacao)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(235, 235, 235)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lingredientesDisponiveis)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lupoadImagem)
                                            .addGap(18, 18, 18)
                                            .addComponent(bUpload))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lTipoIngrediente)
                                            .addGap(18, 18, 18)
                                            .addComponent(boxTipoIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lTituloReceita)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldTituloReceita, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(textFieldNPessoas)
                                        .addGap(109, 109, 109))))
                            .addComponent(lnºpessoas))
                        .addContainerGap(99, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(lTituloR, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lTituloR, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lTipoIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lupoadImagem)
                                    .addComponent(bUpload)))
                            .addComponent(boxTipoIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lTituloReceita)
                            .addComponent(textFieldTituloReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lnºpessoas)
                            .addComponent(textFieldNPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lingredientesselecionados)
                    .addComponent(lingredientesDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtGramas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bAcrescentarIngrediente)
                        .addComponent(bEliminarR)))
                .addGap(18, 18, 18)
                .addComponent(lmetododepreparacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bGuardarReceita)
                    .addComponent(bEliminaReceita)
                    .addComponent(bVoltaA))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUploadActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
         int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                camImg = file.getCanonicalPath();

                String nomeDirectoria = System.getProperty("user.dir");

                nomeDirectoria = nomeDirectoria + File.separator + "src" + File.separator + "UIPackage" + File.separator + "ImgPackage" + File.separator;

                File directoria = new File(nomeDirectoria);
                
                File imagem = new File(nomeDirectoria + file.getName());
                camImg = imagem.getCanonicalPath();
                if (!directoria.exists()) {

                    directoria.mkdir();
                    Files.copy(file.toPath(), imagem.toPath(),REPLACE_EXISTING);
                }else{
                    Files.copy(file.toPath(), imagem.toPath(),REPLACE_EXISTING);
                }
            } catch (IOException ex) {
                System.out.println("Erro");
            }

        }
    }//GEN-LAST:event_bUploadActionPerformed

    private void bAcrescentarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAcrescentarIngredienteActionPerformed

        if (listIngDisp.getSelectedIndex() < 0) {
            return;
        }

        for (Ingrediente i : ing) {
            if (i.getNome().equals(listIngDisp.getSelectedValue())) {
                return;
            }
        }

        int g = 0;

        String tipo = boxTipoIngrediente.getItemAt(boxTipoIngrediente.getSelectedIndex());
        tipo = tipo.toLowerCase();
        Ingrediente i = l.getIngrediente(listIngDisp.getSelectedValue());

        if (txtGramas.getText().equals(" ") || i.getNome() == null) {
            JOptionPane.showMessageDialog(null, "Não tem ingredientes/gramas selecionados!", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            g = Integer.parseInt(txtGramas.getText());
        } catch (NumberFormatException e) {
            return;
        }
        for (Ingrediente x : ing) {
            if (x.getNome().equals(listIngDisp.getSelectedValue())) {
                return;
            }
        }

        listIngSelec.setModel(model);
        model.addElement(listIngDisp.getSelectedValue() + " " + g + "g");

        switch (tipo) {
            case "carne":
                ing.add(new Carne(i.getNome(), i.getCalorias(), g));
                break;
            case "cereal":
                ing.add(new Cereal(i.getNome(), i.getCalorias(), g));
                break;
            case "fruta":
                ing.add(new Fruta(i.getNome(), i.getCalorias(), g));
                break;
            case "lacticinios":
                ing.add(new Lacticinios(i.getNome(), i.getCalorias(), g));
                break;
            case "leguminosas":
                ing.add(new Leguminosas(i.getNome(), i.getCalorias(), g));
                break;
            case "oleos":
                ing.add(new Oleos(i.getNome(), i.getCalorias(), g));
                break;
            case "peixe":
                ing.add(new Peixe(i.getNome(), i.getCalorias(), g));
                break;
            case "vegetal":
                ing.add(new Vegetal(i.getNome(), i.getCalorias(), g));
                break;
            default:
                break;
        }

    }//GEN-LAST:event_bAcrescentarIngredienteActionPerformed

    private void boxTipoIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxTipoIngredienteActionPerformed
        listIngDisp.setModel(l.returnNomeIngredientes(boxTipoIngrediente.getItemAt(boxTipoIngrediente.getSelectedIndex())));

    }//GEN-LAST:event_boxTipoIngredienteActionPerformed

    private void bEliminarRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarRActionPerformed
        if (listIngSelec.getSelectedIndex() < 0) {
            return;
        }

        ing.remove(listIngSelec.getSelectedIndex());

        model.remove(listIngSelec.getSelectedIndex());
        listIngSelec.setModel(model);
    }//GEN-LAST:event_bEliminarRActionPerformed

    private void bGuardarReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarReceitaActionPerformed
        if (ing.isEmpty()) {
            return;
        }
        if (textFieldTituloReceita.getText().equals("") || textFieldNPessoas.getText().equals("") || testAreaMetodoDePreparacao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campos por preencher!", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        int nPessoas = 0;

        try {
            nPessoas = Integer.parseInt(textFieldNPessoas.getText());
            if (nPessoas > 4) {
                JOptionPane.showMessageDialog(null, "Nºde Pessoas não deve ser > 4!", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            return;
        }

        if (!l.editaReceita(id, textFieldTituloReceita.getText(), ing, nPessoas, testAreaMetodoDePreparacao.getText())) {
            JOptionPane.showMessageDialog(null, "Escolha outro titulo para a receita!", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        l.guardarReceitas();

        if (pr instanceof ListarReceita) {
            pr = new ListarReceita(l);
        } else if (pr instanceof ProcurarReceita) {
            pr = new ProcurarReceita(l);
        }
        pr.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bGuardarReceitaActionPerformed

    private void bEliminaReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminaReceitaActionPerformed
        if (!l.eliminaReceita(id)) {
            return;
        }

        l.guardarReceitas();

        if (pr instanceof ListarReceita) {
            pr = new ListarReceita(l);
        } else if (pr instanceof ProcurarReceita) {
            pr = new ProcurarReceita(l);
        }
        pr.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bEliminaReceitaActionPerformed

    private void bVoltaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVoltaAActionPerformed
        if (pr instanceof ListarReceita) {
            pr = new ListarReceita(l);
        }

        pr.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bVoltaAActionPerformed

    private void preenche() {
        textFieldTituloReceita.setText(r.getNome());
        textFieldNPessoas.setText("" + r.nPessoas());
        testAreaMetodoDePreparacao.setText(r.getPassos());
        for (Ingrediente i : ing) {
            model.addElement(i.getNome() + " " + i.getQuantidade() + "g");
        }
        listIngSelec.setModel(model);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarReceita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarReceita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarReceita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarReceita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarReceita().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAcrescentarIngrediente;
    private javax.swing.JButton bEliminaReceita;
    private javax.swing.JButton bEliminarR;
    private javax.swing.JButton bGuardarReceita;
    private javax.swing.JButton bUpload;
    private javax.swing.JButton bVoltaA;
    private javax.swing.JComboBox<String> boxTipoIngrediente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lTipoIngrediente;
    private javax.swing.JLabel lTituloR;
    private javax.swing.JLabel lTituloReceita;
    private javax.swing.JLabel lingredientesDisponiveis;
    private javax.swing.JLabel lingredientesselecionados;
    private javax.swing.JList<String> listIngDisp;
    private javax.swing.JList<String> listIngSelec;
    private javax.swing.JLabel lmetododepreparacao;
    private javax.swing.JLabel lnºpessoas;
    private javax.swing.JLabel lupoadImagem;
    private javax.swing.JTextArea testAreaMetodoDePreparacao;
    private javax.swing.JTextField textFieldNPessoas;
    private javax.swing.JTextField textFieldTituloReceita;
    private javax.swing.JTextField txtGramas;
    // End of variables declaration//GEN-END:variables
}
